package sccp

import (
	"bytes"
	"encoding/hex"
	"fmt"
	"testing"
)

var mockDT1s = [][]byte{
	{0x6, 0x3, 0x20, 0x48, 0x0, 0x1, 0x14, 0x0, 0x12, 0x55, 0x20, 0xd, 0x6, 0x32, 0x17, 0x9, 0x83, 0x96, 0x80, 0x3, 0x56, 0x83, 0x84, 0x18, 0xf5, 0x2c, 0x2},
	{0x6, 0x0, 0x80, 0x2a, 0x0, 0x1, 0x3, 0x0, 0x1, 0x21},
	{0x6, 0x3, 0x20, 0x48, 0x0, 0x1, 0x5, 0x1, 0x80, 0x2, 0x5, 0x9b},
	{0x6, 0x0, 0x70, 0x3e, 0x0, 0x1, 0x37, 0x0, 0x35, 0x12, 0x17, 0x15, 0x6, 0x2b, 0xb7, 0x40, 0xb, 0xe2, 0x40, 0x1a, 0x5, 0xd0, 0x63, 0x41, 0x91, 0x3, 0x6, 0x28, 0x95, 0xa, 0x43, 0x91, 0x44, 0x21, 0x98, 0x2c, 0x2, 0x40, 0x21, 0x7c, 0x6, 0x7, 0x6, 0xc5, 0xca, 0x1b, 0x2a, 0x7d, 0x8, 0x83, 0x97, 0x57, 0x84, 0x17, 0x7, 0x80, 0x81, 0x7e, 0x3, 0x83, 0xff, 0x57},
}

func TestDT1(t *testing.T) {
	for i, v := range mockDT1s {
		dt1, err := ParseDT1(v)
		if err != nil {
			t.Fatal(i, err)
		}
		b, err := dt1.MarshalBinary()
		if err != nil {
			t.Fatal(i, err)
		}
		if !bytes.Equal(v, b) {
			fmt.Println(hex.EncodeToString(v))
			fmt.Println(hex.EncodeToString(b))

			t.Fatal(i, err)
		}

		n := NewDT1(dt1.DestinationLocalReference, dt1.Data)
		b2, err := n.MarshalBinary()
		if err != nil {
			t.Fatal(i, err)
		}
		if !bytes.Equal(v, b2) {
			fmt.Println(hex.EncodeToString(v))
			fmt.Println(hex.EncodeToString(b2))

			t.Fatal(i, err)
		}

		fmt.Println(dt1)
	}
}
